<?php

/**
 * @file
 * Primary module hooks for My Admin Styles module.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\core_provetecmar\Controller\QuoteController;

/**
 * Implementa hook_form_alter().
 */
function core_provetecmar_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id === 'node_quote_edit_form' || $form_id === 'node_quote_form') {
    $form['field_requests_send']['widget']['#prefix'] = '<div class="loader-overlay" style="display:none;"><div class="spinner"></div></div><a id="send-request" href="#" class="button js-form-submit form-submit">Enviar Solicitudes</a>';
    $form['actions']['submit']['#submit'][] = '_quote_submit_custom';
    $form['#attached']['library'][] = 'core_provetecmar/quote-requests';
  }
}


/**
 * Submit custom quote
 */
function _quote_submit_custom($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // Ejemplo: obtener el nodo.
  $node = $form_state->getFormObject()->getEntity();
  $service = \Drupal::service('core_provetecmar.importxlsx');
  $service->importXlsx($node, 'field_items_import');
  $values = $form_state->getValues();
  if (isset($values['field_requests_send']) && $node->field_requests_send->value == 1){
    $sendRequests = \Drupal::service('core_provetecmar.mailsendrequest');
    $sendRequests->proccess($node);
    $node->set('field_requests_send',0);
    $node->save();
  }
}

/**
 * Implements hook_page_attachments().
 */
function core_provetecmar_page_attachments(array &$attachments) {
  $theme_name = \Drupal::theme()->getActiveTheme()->getName();
  if ($theme_name === 'gin') {
    $attachments['#attached']['library'][] = 'core_provetecmar/admin-theme-style';
  }
}

function core_provetecmar_theme($existing, $type, $theme, $path) {
  return [
    'node__quote' => [
      'render element' => 'elements',
      'base hook' => 'node',
      'template' => 'node--quote',
      'path' => \Drupal::service('extension.list.module')->getPath('core_provetecmar') . '/templates',
    ],
    'rfq_mail' => [
      'variables' => [
        'company_name' => NULL,
        'rfq_number' => NULL,
        'data' => NULL,
        'items' => [],
      ],
    ],
    'rfq_pdf_mail' => [
      'variables' => [
        'company_name' => NULL,
        'rfq_number' => NULL,
        'data' => NULL,
        'items' => [],
      ],
    ],
  ];
}

function core_provetecmar_mail($key, &$message, $params) {
  $message['subject'] = $params['subject'] ?? '';
  $message['body'][] = $params['body'] ?? '';
  if (!empty($params['headers']) && is_array($params['headers'])) {
    $message['headers'] = array_merge($message['headers'], $params['headers']);
  }
}


/**
 * Implements hook_node_access().
 */
function core_provetecmar_node_access(\Drupal\node\NodeInterface $node, $op, \Drupal\Core\Session\AccountInterface $account) {
  if ($op === 'update') {
    if ($node->hasField('field_quoter')) {
      $state = $node->get('moderation_state')->value;
      if($state == "assignment"){
        $autores = $node->get('field_quoter')->referencedEntities();
        foreach ($autores as $autor) {
          if ($autor->id() === $account->id()) {
            return \Drupal\Core\Access\AccessResult::allowed()->addCacheableDependency($node);
          }
        }
      }

    }
  }

  return \Drupal\Core\Access\AccessResult::neutral();
}